---
import RootLayout from "./RootLayout.astro";
import TopNavigation from "../components/layout/TopNavigation";
import Footer from "../components/layout/Footer.astro";
import WarpBackground from "../components/ui/WarpBackground";

const {
  title,
  description,
  showNavigation = true,
  useInfoLayout = false,
  useContentLayout = false
} = Astro.props;
---

<RootLayout title={title} description={description}>
  {showNavigation && !useInfoLayout && !useContentLayout && (
    <TopNavigation client:load />
    <div class="h-16"></div> <!-- Spacer for fixed nav -->
  )}

  {useContentLayout ? (
    <!-- Content-focused layout without warp animation for better readability -->
    <div class="bg-black min-h-screen">
      {showNavigation && (
        <TopNavigation variant="static" client:load />
      )}
      <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="[&_h1]:text-red-600 pt-8 pb-20 text-white">
          <slot />
        </div>
      </main>
      <Footer />
    </div>
  ) : useInfoLayout ? (
    <div class="flex relative gap-4 w-full max-w-screen-xl">
      <!-- Bookmark-style warp animation -->
      <nav class="relative w-4 md:min-w-[4rem] xl:min-w-[5rem] sm:min-h-screen sm:ml-8 sm:pb-4">
        <div class="w-full h-[80vh] max-sm:w-4 md:max-w-[3rem] xl:max-w-[4rem] fixed top-[10vh] -z-10 sm:rounded-full overflow-hidden shadow-2xl">
          <WarpBackground client:load />
        </div>
      </nav>

      <main class="relative bg-black flex-1">
        {showNavigation && (
          <TopNavigation variant="static" client:load />
        )}
        <div class="[&_h1]:text-red-600 pt-8 pb-20 text-white max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <slot />
        </div>
        <Footer />
      </main>
    </div>
  ) : (
    <slot />
  )}
</RootLayout>