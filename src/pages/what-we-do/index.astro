---
import PageLayout from "../../layouts/PageLayout.astro";
import H1 from "../../components/ui/H1.astro";
import { getTranslations, getLanguageFromURL } from "../../lib/translations";

// Get current language from URL (SSR-compatible)
const lang = getLanguageFromURL(Astro.url);
const t = getTranslations(lang);
const pageContent: any = t.pages?.whatWeDo || {};

// Handle base path for GitHub Pages compatibility with language
const getFullPath = (path: string) => {
  const basePath = path.startsWith('/') ? `${import.meta.env.BASE_URL}${path.slice(1)}` : path;
  return lang === 'zh' ? `${basePath}${basePath.includes('?') ? '&' : '?'}lang=zh` : basePath;
};

// Enhanced project data with icons and better categorization
interface Project {
  id: string;
  title: string;
  subtitle: string;
  description: string;
  href: string;
  category: string;
  icon: string;
  color: string;
  status: 'active' | 'upcoming' | 'ongoing';
  metrics?: { label: string; value: string }[];
}

// Projects with enhanced metadata
const projects: Project[] = [
  {
    id: 'workersAssist',
    title: 'Workers Assist',
    subtitle: 'Mutual Support Community',
    description: 'Supporting Asian labor workers in Boston with free language learning, life skills training, and youth education programs. Building a stronger, more connected community.',
    href: '/what-we-do/workers-assist',
    category: 'Community Support',
    icon: '👥',
    color: 'from-orange-600 to-red-600',
    status: 'active',
    metrics: [
      { label: 'Active Members', value: '400+' },
      { label: 'Volunteers', value: '50+' }
    ]
  },
  {
    id: 'plantcoreAi',
    title: 'Plantcore.AI',
    subtitle: 'Industrial Intelligence Platform',
    description: 'Revolutionary AI-driven decision intelligence for manufacturing. Building the world\'s first Industrial Vertical LLM through systematic factory data collection and analysis.',
    href: '/what-we-do/plantcore-ai',
    category: 'Industrial AI',
    icon: '🏭',
    color: 'from-blue-600 to-cyan-600',
    status: 'active',
    metrics: [
      { label: 'Target Factories', value: '10K' },
      { label: 'AI Agents Goal', value: '150K' }
    ]
  },
  {
    id: 'srtp',
    title: 'S.R.T.P.',
    subtitle: 'Sinthome Reading & Training Program',
    description: 'Public lecture series exploring critical theory, philosophy, and social transformation. Connecting academic discourse with practical social change.',
    href: '/what-we-do/srtp',
    category: 'Education',
    icon: '📚',
    color: 'from-purple-600 to-pink-600',
    status: 'ongoing',
    metrics: [
      { label: 'Lectures Held', value: '12+' },
      { label: 'Participants', value: '500+' }
    ]
  },
  {
    id: 'aiHackathon',
    title: 'AI Hackathon',
    subtitle: 'Innovation for Social Good',
    description: 'Annual event bringing together developers and innovators to create AI-powered solutions for real-world social challenges with industry mentorship.',
    href: '/what-we-do/ai-hackathon/',
    category: 'Innovation',
    icon: '🚀',
    color: 'from-green-600 to-emerald-600',
    status: 'upcoming',
    metrics: [
      { label: 'Teams', value: '20+' },
      { label: 'Projects', value: '15+' }
    ]
  }
];

// Organize projects by status
const activeProjects = projects.filter(p => p.status === 'active');
const ongoingProjects = projects.filter(p => p.status === 'ongoing');
const upcomingProjects = projects.filter(p => p.status === 'upcoming');
---

<PageLayout title="What We Do - Sinthome" useInfoLayout={true}>
  <!-- Hero Section -->
  <div class="mb-12">
    <H1 className="mb-6">{pageContent.title || 'What We Do'}</H1>
    <p class="text-xl text-zinc-300 max-w-3xl leading-relaxed">
      {pageContent.subtitle || 'Through innovative programs and strategic partnerships, we work at the intersection of technology, community, and social transformation to create lasting positive impact.'}
    </p>
  </div>

  <!-- Quick Navigation -->
  <div class="flex flex-wrap gap-3 mb-12">
    <button
      onclick="document.getElementById('active-projects').scrollIntoView({ behavior: 'smooth' })"
      class="px-4 py-2 bg-zinc-800 text-zinc-200 rounded-lg hover:bg-zinc-700 transition-colors"
    >
      Active Programs ({activeProjects.length})
    </button>
    <button
      onclick="document.getElementById('ongoing-projects').scrollIntoView({ behavior: 'smooth' })"
      class="px-4 py-2 bg-zinc-800 text-zinc-200 rounded-lg hover:bg-zinc-700 transition-colors"
    >
      Ongoing Initiatives ({ongoingProjects.length})
    </button>
    <button
      onclick="document.getElementById('upcoming-projects').scrollIntoView({ behavior: 'smooth' })"
      class="px-4 py-2 bg-zinc-800 text-zinc-200 rounded-lg hover:bg-zinc-700 transition-colors"
    >
      Upcoming ({upcomingProjects.length})
    </button>
  </div>

  <!-- Active Projects Section -->
  {activeProjects.length > 0 && (
    <section id="active-projects" class="mb-16">
      <div class="flex items-center gap-3 mb-8">
        <div class="w-2 h-8 bg-green-500 rounded-full"></div>
        <h2 class="text-2xl font-bold text-white">Active Programs</h2>
        <span class="px-3 py-1 bg-green-500/20 text-green-400 text-sm rounded-full">
          Currently Running
        </span>
      </div>

      <div class="grid gap-8">
        {activeProjects.map((project) => (
          <a
            href={getFullPath(project.href)}
            class="group relative block overflow-hidden rounded-2xl bg-gradient-to-br from-zinc-900 to-zinc-800 border border-zinc-700 hover:border-zinc-600 transition-all duration-300"
          >
            <!-- Gradient Background -->
            <div class={`absolute inset-0 bg-gradient-to-br ${project.color} opacity-5 group-hover:opacity-10 transition-opacity`}></div>

            <div class="relative p-8">
              <div class="flex flex-col lg:flex-row gap-8">
                <!-- Left: Project Info -->
                <div class="flex-1">
                  <div class="flex items-start gap-4 mb-4">
                    <span class="text-4xl">{project.icon}</span>
                    <div>
                      <span class="inline-block px-3 py-1 mb-2 text-xs font-semibold text-zinc-400 bg-zinc-800 rounded-full">
                        {project.category}
                      </span>
                      <h3 class="text-2xl font-bold text-white mb-1 group-hover:text-red-400 transition-colors">
                        {project.title}
                      </h3>
                      <p class="text-lg text-red-400 font-medium">{project.subtitle}</p>
                    </div>
                  </div>

                  <p class="text-zinc-300 leading-relaxed mb-6">
                    {project.description}
                  </p>

                  <div class="flex items-center text-red-400 group-hover:text-red-300 transition-colors">
                    <span class="font-semibold">Explore Program</span>
                    <svg class="w-5 h-5 ml-2 group-hover:translate-x-2 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                    </svg>
                  </div>
                </div>

                <!-- Right: Metrics -->
                {project.metrics && (
                  <div class="lg:w-64">
                    <div class="grid grid-cols-2 lg:grid-cols-1 gap-4">
                      {project.metrics.map((metric) => (
                        <div class="bg-zinc-800/50 rounded-lg p-4">
                          <div class="text-2xl font-bold text-white mb-1">{metric.value}</div>
                          <div class="text-sm text-zinc-400">{metric.label}</div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            </div>
          </a>
        ))}
      </div>
    </section>
  )}

  <!-- Ongoing Projects Section -->
  {ongoingProjects.length > 0 && (
    <section id="ongoing-projects" class="mb-16">
      <div class="flex items-center gap-3 mb-8">
        <div class="w-2 h-8 bg-yellow-500 rounded-full"></div>
        <h2 class="text-2xl font-bold text-white">Ongoing Initiatives</h2>
        <span class="px-3 py-1 bg-yellow-500/20 text-yellow-400 text-sm rounded-full">
          In Progress
        </span>
      </div>

      <div class="grid gap-8">
        {ongoingProjects.map((project) => (
          <a
            href={getFullPath(project.href)}
            class="group relative block overflow-hidden rounded-2xl bg-gradient-to-br from-zinc-900 to-zinc-800 border border-zinc-700 hover:border-zinc-600 transition-all duration-300"
          >
            <div class={`absolute inset-0 bg-gradient-to-br ${project.color} opacity-5 group-hover:opacity-10 transition-opacity`}></div>

            <div class="relative p-8">
              <div class="flex flex-col lg:flex-row gap-8">
                <div class="flex-1">
                  <div class="flex items-start gap-4 mb-4">
                    <span class="text-4xl">{project.icon}</span>
                    <div>
                      <span class="inline-block px-3 py-1 mb-2 text-xs font-semibold text-zinc-400 bg-zinc-800 rounded-full">
                        {project.category}
                      </span>
                      <h3 class="text-2xl font-bold text-white mb-1 group-hover:text-red-400 transition-colors">
                        {project.title}
                      </h3>
                      <p class="text-lg text-red-400 font-medium">{project.subtitle}</p>
                    </div>
                  </div>

                  <p class="text-zinc-300 leading-relaxed mb-6">
                    {project.description}
                  </p>

                  <div class="flex items-center text-red-400 group-hover:text-red-300 transition-colors">
                    <span class="font-semibold">Learn More</span>
                    <svg class="w-5 h-5 ml-2 group-hover:translate-x-2 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                    </svg>
                  </div>
                </div>

                {project.metrics && (
                  <div class="lg:w-64">
                    <div class="grid grid-cols-2 lg:grid-cols-1 gap-4">
                      {project.metrics.map((metric) => (
                        <div class="bg-zinc-800/50 rounded-lg p-4">
                          <div class="text-2xl font-bold text-white mb-1">{metric.value}</div>
                          <div class="text-sm text-zinc-400">{metric.label}</div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            </div>
          </a>
        ))}
      </div>
    </section>
  )}

  <!-- Upcoming Projects Section -->
  {upcomingProjects.length > 0 && (
    <section id="upcoming-projects" class="mb-16">
      <div class="flex items-center gap-3 mb-8">
        <div class="w-2 h-8 bg-blue-500 rounded-full"></div>
        <h2 class="text-2xl font-bold text-white">Upcoming</h2>
        <span class="px-3 py-1 bg-blue-500/20 text-blue-400 text-sm rounded-full">
          Coming Soon
        </span>
      </div>

      <div class="grid gap-8">
        {upcomingProjects.map((project) => (
          <a
            href={getFullPath(project.href)}
            class="group relative block overflow-hidden rounded-2xl bg-gradient-to-br from-zinc-900 to-zinc-800 border border-zinc-700 hover:border-zinc-600 transition-all duration-300"
          >
            <div class={`absolute inset-0 bg-gradient-to-br ${project.color} opacity-5 group-hover:opacity-10 transition-opacity`}></div>

            <div class="relative p-8">
              <div class="flex flex-col lg:flex-row gap-8">
                <div class="flex-1">
                  <div class="flex items-start gap-4 mb-4">
                    <span class="text-4xl">{project.icon}</span>
                    <div>
                      <span class="inline-block px-3 py-1 mb-2 text-xs font-semibold text-zinc-400 bg-zinc-800 rounded-full">
                        {project.category}
                      </span>
                      <h3 class="text-2xl font-bold text-white mb-1 group-hover:text-red-400 transition-colors">
                        {project.title}
                      </h3>
                      <p class="text-lg text-red-400 font-medium">{project.subtitle}</p>
                    </div>
                  </div>

                  <p class="text-zinc-300 leading-relaxed mb-6">
                    {project.description}
                  </p>

                  <div class="flex items-center text-red-400 group-hover:text-red-300 transition-colors">
                    <span class="font-semibold">Coming Soon</span>
                    <svg class="w-5 h-5 ml-2 group-hover:translate-x-2 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                    </svg>
                  </div>
                </div>

                {project.metrics && (
                  <div class="lg:w-64">
                    <div class="grid grid-cols-2 lg:grid-cols-1 gap-4">
                      {project.metrics.map((metric) => (
                        <div class="bg-zinc-800/50 rounded-lg p-4">
                          <div class="text-2xl font-bold text-white mb-1">{metric.value}</div>
                          <div class="text-sm text-zinc-400">{metric.label}</div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            </div>
          </a>
        ))}
      </div>
    </section>
  )}

  <!-- Overall Impact Section -->
  <section class="mt-20 p-12 bg-gradient-to-br from-zinc-900 to-zinc-800 border border-zinc-700 rounded-2xl">
    <h2 class="text-3xl font-bold text-white mb-8 text-center">Our Collective Impact</h2>
    <div class="grid md:grid-cols-4 gap-8 text-center">
      <div>
        <div class="text-4xl font-bold bg-gradient-to-r from-red-400 to-red-600 bg-clip-text text-transparent mb-2">
          1,000+
        </div>
        <div class="text-zinc-400">People Empowered</div>
      </div>
      <div>
        <div class="text-4xl font-bold bg-gradient-to-r from-blue-400 to-cyan-600 bg-clip-text text-transparent mb-2">
          50+
        </div>
        <div class="text-zinc-400">Active Projects</div>
      </div>
      <div>
        <div class="text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-600 bg-clip-text text-transparent mb-2">
          30+
        </div>
        <div class="text-zinc-400">Partner Organizations</div>
      </div>
      <div>
        <div class="text-4xl font-bold bg-gradient-to-r from-green-400 to-emerald-600 bg-clip-text text-transparent mb-2">
          15+
        </div>
        <div class="text-zinc-400">Communities Served</div>
      </div>
    </div>
  </section>

  <!-- Call to Action -->
  <section class="mt-20 text-center">
    <h2 class="text-3xl font-bold text-white mb-4">Join Our Mission</h2>
    <p class="text-xl text-zinc-300 mb-8 max-w-2xl mx-auto">
      Whether you're a volunteer, partner, or supporter, there's a place for you in our community. Together, we can create lasting change.
    </p>
    <div class="flex flex-col sm:flex-row gap-4 justify-center">
      <a
        href={getFullPath("/contact")}
        class="inline-block px-8 py-4 bg-red-600 text-white font-semibold rounded-lg hover:bg-red-700 transition-colors"
      >
        Get Involved
      </a>
      <a
        href={getFullPath("/donate")}
        class="inline-block px-8 py-4 bg-transparent border-2 border-zinc-600 text-zinc-300 font-semibold rounded-lg hover:border-zinc-500 hover:text-white transition-all"
      >
        Support Our Work
      </a>
    </div>
  </section>
</PageLayout>