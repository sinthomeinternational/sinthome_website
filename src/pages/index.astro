---
import RootLayout from "../layouts/RootLayout.astro";
import WarpBackground from "../components/ui/WarpBackground";
---

<RootLayout>
	<main class="homepage-main">
		<div id="homepage-container" class="group relative w-full h-dvh flex items-center justify-center overflow-hidden">
			<div class="absolute w-full h-dvh -z-10 overflow-hidden">
				{/* Enhanced Warp with directional movement - colors will auto-adapt to theme */}
				<WarpBackground
						speed={0.2}
						swirl={0.98}
						swirlIterations={29}
						shapeScale={0.04}
						rotation={0.55}
						scale={0.4}
						softness={0}
						distortion={0}
						client:visible
				/>
			</div>

			<div class="absolute w-full h-dvh flex flex-col justify-center items-center z-10">
				<!-- Animated Content Container -->
				<div id="hero-content" class="flex flex-col justify-center items-center text-center transition-all duration-700 ease-out w-full">
					<!-- SINTHOME - Starts Centered with responsive positioning -->
					<h1 id="sinthome-title" class="sinthome-title font-black uppercase mb-0 transition-all duration-700 ease-out sinthome-centered" style="color: var(--theme-text-primary);">
						SINTHOME
					</h1>

					<!-- Initially Hidden Elements -->
					<div id="emerging-content" class="content-hidden absolute-content">
						<!-- Straightforward Tagline -->
						<p class="tagline text-xl sm:text-2xl font-semibold mb-6 mt-4 text-center" style="color: var(--theme-text-primary);">
							Knowledge — Critique — Praxis
						</p>

						<!-- Plain Practice Tags -->
						<div class="tags-container flex flex-wrap justify-center gap-3 mb-10 max-w-3xl mx-auto">
							<span class="tag-item px-4 py-2 rounded-full text-sm theme-tag">
								Public Lectures
							</span>
							<span class="tag-item px-4 py-2 rounded-full text-sm theme-tag">
								Psychoanalysis
							</span>
							<span class="tag-item px-4 py-2 rounded-full text-sm theme-tag">
								Workers Assist
							</span>
							<span class="tag-item px-4 py-2 rounded-full text-sm theme-tag">
								AI for Public Good
							</span>
							<span class="tag-item px-4 py-2 rounded-full text-sm theme-tag">
								Factory AI Solution
							</span>
						</div>

						<!-- Simple, Direct CTAs -->
						<div class="buttons-container flex flex-col sm:flex-row gap-4 justify-center items-center">
							<a
								href="/who-we-are"
								class="cta-button cta-button-primary px-8 py-4 font-bold transition-colors"
							>
								ABOUT US
							</a>
							<a
								href="/what-we-do"
								class="cta-button cta-button-secondary px-8 py-4 font-bold transition-colors"
							>
								OUR PROJECTS
							</a>
							<a
								href="/contact"
								class="cta-button cta-button-tertiary px-8 py-4 font-bold transition-colors"
							>
								JOIN US
							</a>
						</div>
					</div>
				</div>

				<!-- Enhanced Scroll Indicator -->
				<div id="scroll-indicator" class="absolute bottom-8 left-1/2 transform -translate-x-1/2 opacity-100 transition-opacity duration-500">
					<div class="scroll-pulse-animation backdrop-blur-sm rounded-full w-12 h-12 flex items-center justify-center shadow-lg transition-all duration-300" style="background-color: var(--theme-bg-card); border: 1px solid var(--theme-border);">
						<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" style="color: var(--theme-text-secondary);">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
						</svg>
					</div>
				</div>

				<!-- Collapse Button (hidden by default, shown when content is visible) -->
				<div id="collapse-button" class="absolute bottom-8 left-1/2 transform -translate-x-1/2 opacity-0 pointer-events-none transition-all duration-300">
					<div class="backdrop-blur-sm rounded-full w-12 h-12 flex items-center justify-center shadow-lg transition-all duration-300 hover:scale-110 cursor-pointer" style="background-color: var(--theme-bg-card); border: 1px solid var(--theme-border);">
						<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" style="color: var(--theme-text-secondary);">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M5 11l7-7 7 7M5 19l7-7 7 7"></path>
						</svg>
					</div>
				</div>
			</div>
		</div>
	</main>
</RootLayout>

<script>
	import { initializePreserveParams } from '../lib/preserveUrlParams';

	// Initialize URL parameter preservation for all links
	if (typeof window !== 'undefined') {
		document.addEventListener('DOMContentLoaded', () => {
			initializePreserveParams();
		});
	}

	// Professional smooth animation logic - scoped to homepage container only
	function initializeHomepageAnimations(): (() => void) | null {
		const container = document.getElementById('homepage-container');

		// Only proceed if we're on the homepage
		if (!container) return null;

		let hasScrolled = false;
		let animationTimeouts: NodeJS.Timeout[] = []; // Store all timeout IDs for cancellation

		// Professional animation timing configuration
		const ANIMATION_CONFIG = {
			titleMove: 300,        // Reduced from 400
			contentDelay: 0,       // Immediate start (was 150)
			taglineDelay: 100,     // Reduced from 300
			tagsDelay: 200,        // Reduced from 450
			buttonsDelay: 400,     // Reduced from 700
			staggerDelay: 40,      // Reduced from 60
			microAnimationDelay: 800 // Reduced from 1200
		};

		// Clear all pending animations
		function clearAllAnimations() {
			animationTimeouts.forEach(timeout => clearTimeout(timeout));
			animationTimeouts = [];
		}

		function triggerAnimation() {
			// Hide scroll indicator and show collapse button
			const scrollIndicator = document.getElementById('scroll-indicator');
			const collapseButton = document.getElementById('collapse-button');
			scrollIndicator?.classList.add('scroll-hidden');

			if (hasScrolled) return;

			// Clear any pending animations from reset
			clearAllAnimations();
			hasScrolled = true;

			const emergingContent = document.getElementById('emerging-content');
			const sinthomeTitle = document.getElementById('sinthome-title');

			// Step 1: Move SINTHOME title up smoothly
			sinthomeTitle?.classList.add('title-moved');

			// Show collapse button after a delay
			animationTimeouts.push(setTimeout(() => {
				collapseButton?.classList.remove('opacity-0', 'pointer-events-none');
				collapseButton?.classList.add('opacity-100');
			}, ANIMATION_CONFIG.buttonsDelay + 200));

			// Step 3: Start content animation sequence
			animationTimeouts.push(setTimeout(() => {
				emergingContent?.classList.add('content-visible');
			}, ANIMATION_CONFIG.contentDelay));

			// Step 4: Animate tagline
			animationTimeouts.push(setTimeout(() => {
				const tagline = document.querySelector('.tagline');
				tagline?.classList.add('element-visible');
			}, ANIMATION_CONFIG.taglineDelay));

			// Step 5: Animate tags with stagger
			animationTimeouts.push(setTimeout(() => {
				const tags = document.querySelectorAll('.tag-item');
				tags.forEach((tag, index) => {
					animationTimeouts.push(setTimeout(() => {
						tag.classList.add('element-visible');
					}, index * ANIMATION_CONFIG.staggerDelay));
				});
			}, ANIMATION_CONFIG.tagsDelay));

			// Step 6: Animate buttons with stagger
			animationTimeouts.push(setTimeout(() => {
				const buttons = document.querySelectorAll('.cta-button');
				buttons.forEach((button, index) => {
					animationTimeouts.push(setTimeout(() => {
						button.classList.add('element-visible');
					}, index * ANIMATION_CONFIG.staggerDelay));
				});

				// Step 7: Add subtle micro-animations after main sequence
				animationTimeouts.push(setTimeout(() => {
					// Add gentle floating animation to tags
					const tags = document.querySelectorAll('.tag-item');
					tags.forEach((tag, index) => {
						tag.classList.add('micro-float');
						(tag as HTMLElement).style.animationDelay = `${index * 0.2}s`;
					});

					// Add subtle pulse to buttons
					buttons.forEach((button, index) => {
						animationTimeouts.push(setTimeout(() => {
							button.classList.add('micro-pulse');
						}, index * 100));
					});
				}, ANIMATION_CONFIG.microAnimationDelay));
			}, ANIMATION_CONFIG.buttonsDelay));
		}

		function resetAnimation() {
			if (!hasScrolled) return;

			// Clear all pending animations immediately
			clearAllAnimations();
			hasScrolled = false;

			const emergingContent = document.getElementById('emerging-content');
			const sinthomeTitle = document.getElementById('sinthome-title');
			const scrollIndicator = document.getElementById('scroll-indicator');
			const collapseButton = document.getElementById('collapse-button');

			// Remove all animation classes simultaneously for instant reset
			sinthomeTitle?.classList.remove('title-moved');
			emergingContent?.classList.remove('content-visible');
			scrollIndicator?.classList.remove('scroll-hidden');

			// Hide collapse button and show scroll indicator
			collapseButton?.classList.add('opacity-0', 'pointer-events-none');
			collapseButton?.classList.remove('opacity-100');

			// Reset all child elements and micro-animations
			document.querySelectorAll('.element-visible').forEach(el => {
				el.classList.remove('element-visible', 'micro-float', 'micro-pulse');
				(el as HTMLElement).style.animationDelay = '';
			});
		}

		// Store event handler references for cleanup
		const wheelHandler = (e: WheelEvent) => {
			// Only prevent default within the homepage container
			e.preventDefault();
			e.stopPropagation();

			if (e.deltaY > 0) {
				triggerAnimation();
			} else if (e.deltaY < 0) {
				resetAnimation();
			}
		};

		let touchStartY = 0;

		const touchStartHandler = (e: TouchEvent) => {
			touchStartY = e.touches[0].clientY;
		};

		const touchMoveHandler = (e: TouchEvent) => {
			e.preventDefault();
			e.stopPropagation();

			const touchEndY = e.touches[0].clientY;
			const deltaY = touchStartY - touchEndY;

			if (deltaY > 30) {
				triggerAnimation();
			} else if (deltaY < -30) {
				resetAnimation();
			}
		};

		const keydownHandler = (e: KeyboardEvent) => {
			// Only handle if container has focus
			if (document.activeElement !== container) return;

			// Don't hijack spacebar - it breaks default scrolling
			if (e.key === 'ArrowDown') {
				e.preventDefault();
				e.stopPropagation();
				triggerAnimation();
			} else if (e.key === 'ArrowUp') {
				e.preventDefault();
				e.stopPropagation();
				resetAnimation();
			}
		};

		// Click handler for scroll indicator
		const scrollIndicatorClickHandler = (e: Event) => {
			e.preventDefault();
			triggerAnimation();
		};

		// Click handler for collapse button
		const collapseButtonClickHandler = (e: Event) => {
			e.preventDefault();
			resetAnimation();
		};

		// Add click listeners
		const scrollIndicator = document.getElementById('scroll-indicator');
		const collapseButton = document.getElementById('collapse-button');
		scrollIndicator?.addEventListener('click', scrollIndicatorClickHandler);
		collapseButton?.addEventListener('click', collapseButtonClickHandler);

		// Attach listeners ONLY to the homepage container, not window
		container.addEventListener('wheel', wheelHandler, { passive: false });
		container.addEventListener('touchstart', touchStartHandler, { passive: true });
		container.addEventListener('touchmove', touchMoveHandler, { passive: false });
		container.addEventListener('keydown', keydownHandler);

		// Make container focusable for keyboard events
		container.setAttribute('tabindex', '0');

		// Return cleanup function
		return () => {
			clearAllAnimations();
			container.removeEventListener('wheel', wheelHandler);
			container.removeEventListener('touchstart', touchStartHandler);
			container.removeEventListener('touchmove', touchMoveHandler);
			container.removeEventListener('keydown', keydownHandler);
			scrollIndicator?.removeEventListener('click', scrollIndicatorClickHandler);
			collapseButton?.removeEventListener('click', collapseButtonClickHandler);
		};
	}

	// Global variable to store cleanup function
	let cleanupHomepageAnimations: (() => void) | null = null;

	// Initialize on first load
	document.addEventListener('DOMContentLoaded', () => {
		cleanupHomepageAnimations = initializeHomepageAnimations();
	});

	// Handle browser back/forward navigation (bfcache restoration)
	window.addEventListener('pageshow', (event) => {
		// Only reinitialize if page was restored from bfcache
		if (event.persisted) {
			console.log('[Homepage] Restoring from bfcache');

			// Clean up stale instance first
			if (cleanupHomepageAnimations) {
				cleanupHomepageAnimations();
				cleanupHomepageAnimations = null;
			}

			// Reinitialize animations
			cleanupHomepageAnimations = initializeHomepageAnimations();
		}
	});

	// Clean up before page goes into bfcache (optional optimization)
	window.addEventListener('pagehide', (event) => {
		// Only cleanup if page is being cached (not fully unloaded)
		if (event.persisted && cleanupHomepageAnimations) {
			console.log('[Homepage] Preparing for bfcache');
			cleanupHomepageAnimations();
			cleanupHomepageAnimations = null;
		}
	});

	// Handle tab visibility changes
	document.addEventListener('visibilitychange', () => {
		const container = document.getElementById('homepage-container');

		// Only act if we're on the homepage
		if (!container) return;

		if (document.hidden) {
			// Tab hidden - cleanup to save resources
			if (cleanupHomepageAnimations) {
				console.log('[Homepage] Tab hidden - cleaning up animations');
				cleanupHomepageAnimations();
				cleanupHomepageAnimations = null;
			}
		} else {
			// Tab visible - reinitialize if needed
			if (!cleanupHomepageAnimations) {
				console.log('[Homepage] Tab visible - reinitializing animations');
				cleanupHomepageAnimations = initializeHomepageAnimations();
			}
		}
	});
</script>

<style>
	/* CSS Variables for consistent animation timing */
	:root {
		--animation-duration-fast: 0.2s;    /* Reduced from 0.25s */
		--animation-duration-medium: 0.35s; /* Reduced from 0.45s */
		--animation-duration-slow: 0.5s;    /* Reduced from 0.65s */
		--animation-easing: cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Professional ease-out curve */
		--animation-easing-entrance: cubic-bezier(0.16, 1, 0.3, 1); /* Smooth entrance */
		--animation-easing-micro: cubic-bezier(0.4, 0, 0.2, 1); /* Subtle micro-animations */
	}

	/* Keyboard focus indicator for accessibility */
	#homepage-container {
		outline: none;
	}

	#homepage-container:focus-visible {
		outline: 2px solid rgba(220, 38, 38, 0.5);
		outline-offset: -4px;
	}

	/* SINTHOME title styling - League Spartan Bold */
	.sinthome-title {
		/* League Spartan - geometric sans-serif with strong, clean lines */
		font-family: 'League Spartan', sans-serif;
		font-weight: 700; /* Bold weight */
		letter-spacing: -0.06em; /* Much tighter spacing for condensed look */
		font-size: min(18vw, 16rem); /* Smaller size, no stretching */
		line-height: 1; /* Natural line height */
		text-rendering: optimizeLegibility;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		color: var(--theme-text-primary);
		/* No horizontal compression - natural width */
		transform: scaleX(1);
		transform-origin: center;
		/* Smooth transition for title movement */
		transition: transform var(--animation-duration-medium) var(--animation-easing);
	}

	/* Center SINTHOME properly on different screen sizes */
	.sinthome-centered {
		/* Mobile: Keep towards upper part of screen */
		@apply mt-[-20vh];
	}

	/* Desktop: Perfect centering and animation states */
	@media (min-width: 768px) {
		.sinthome-centered {
			margin-top: 0;
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
		}

		/* When animated, move SINTHOME up - combines with title-moved class */
		.sinthome-title.title-moved.sinthome-centered {
			transform: translate(-50%, calc(-50% - 3rem));
		}
	}

	/* Mobile title movement */
	@media (max-width: 767px) {
		.sinthome-title.title-moved {
			transform: translateY(-3rem);
		}
	}

	/* Position the emerging content properly */
	.absolute-content {
		position: absolute;
		top: 55%;
		left: 50%;
		transform: translateX(-50%);
		width: 100%;
		max-width: 64rem;
		padding: 0 1rem;
	}

	/* Mobile adjustments for emerging content */
	@media (max-width: 767px) {
		.absolute-content {
			position: static;
			transform: none;
			margin-top: 2rem;
		}
	}

	/* Prevent actual scrolling only on homepage */
	.homepage-main {
		height: 100vh;
		overflow: hidden;
	}

	/* Professional Animation System */

	/* Initial hidden state for content - desktop */
	@media (min-width: 768px) {
		.content-hidden.absolute-content {
			opacity: 0;
			transform: translateX(-50%) translateY(2rem);
			transition: opacity var(--animation-duration-slow) var(--animation-easing),
						transform var(--animation-duration-slow) var(--animation-easing);
		}

		/* Content visible state - desktop */
		.content-hidden.content-visible.absolute-content {
			opacity: 1;
			transform: translateX(-50%) translateY(0);
		}
	}

	/* Initial hidden state for content - mobile */
	@media (max-width: 767px) {
		.content-hidden {
			opacity: 0;
			transform: translateY(2rem);
			transition: opacity var(--animation-duration-slow) var(--animation-easing),
						transform var(--animation-duration-slow) var(--animation-easing);
		}

		/* Content visible state - mobile */
		.content-hidden.content-visible {
			opacity: 1;
			transform: translateY(0);
		}
	}

	/* Individual element initial states */
	.tagline,
	.tag-item,
	.cta-button {
		opacity: 0;
		transform: translateY(1.2rem) scale(0.98);
		transition: opacity var(--animation-duration-medium) var(--animation-easing-entrance),
					transform var(--animation-duration-medium) var(--animation-easing-entrance),
					scale var(--animation-duration-medium) var(--animation-easing-entrance);
	}

	/* Individual element visible states */
	.tagline.element-visible,
	.tag-item.element-visible,
	.cta-button.element-visible {
		opacity: 1;
		transform: translateY(0) scale(1);
	}

	/* Subtle hover enhancement for tags */
	.tag-item.element-visible {
		transition: opacity var(--animation-duration-medium) var(--animation-easing-entrance),
					transform var(--animation-duration-medium) var(--animation-easing-entrance),
					background-color var(--animation-duration-fast) ease,
					border-color var(--animation-duration-fast) ease;
	}

	.tag-item.element-visible:hover {
		background-color: var(--theme-bg-secondary);
		border-color: var(--theme-border-hover);
	}

	/* Professional button transitions */
	.cta-button.element-visible {
		transition: opacity var(--animation-duration-medium) var(--animation-easing-entrance),
					transform var(--animation-duration-medium) var(--animation-easing-entrance),
					background-color var(--animation-duration-fast) ease,
					color var(--animation-duration-fast) ease,
					border-color var(--animation-duration-fast) ease,
					box-shadow var(--animation-duration-fast) ease;
	}

	/* Subtle elevation on button hover */
	.cta-button.element-visible:hover {
		transform: translateY(-2px) scale(1.02);
		box-shadow: 0 6px 20px rgba(168, 0, 0, 0.2);
	}

	/* Enhanced scroll indicator with pulsing circle */
	#scroll-indicator {
		opacity: 1;
		transition: opacity 0.15s ease-out; /* Even faster fade */
	}

	#scroll-indicator.scroll-hidden {
		opacity: 0;
		pointer-events: none; /* Prevent any interaction when hidden */
	}

	/* Custom pulse animation for scroll indicator */
	@keyframes scrollPulse {
		0%, 100% {
			transform: scale(1);
			opacity: 1;
		}
		50% {
			transform: scale(1.05);
			opacity: 0.9;
		}
	}

	.scroll-pulse-animation {
		animation: scrollPulse 2s ease-in-out infinite;
	}

	/* Add hover effect for scroll indicator */
	#scroll-indicator:hover .scroll-pulse-animation {
		animation-play-state: paused;
		transform: scale(1.1);
		background-color: var(--theme-bg-secondary);
		border-color: var(--theme-border-hover);
		cursor: pointer;
	}

	/* Performance optimizations */
	.sinthome-title,
	.content-hidden,
	.tagline,
	.tag-item,
	.cta-button,
	#scroll-indicator {
		will-change: transform, opacity;
	}

	/* Ensure smooth rendering on all devices */
	* {
		-webkit-backface-visibility: hidden;
		backface-visibility: hidden;
	}

	/* Micro-animations for enhanced polish */
	@keyframes microFloat {
		0%, 100% {
			transform: translateY(0) scale(1);
		}
		50% {
			transform: translateY(-2px) scale(1.01);
		}
	}

	@keyframes microPulse {
		0% {
			transform: translateY(0) scale(1);
			box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
		}
		50% {
			transform: translateY(0) scale(1.015);
			box-shadow: 0 4px 16px rgba(168, 0, 0, 0.15);
		}
		100% {
			transform: translateY(0) scale(1);
			box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
		}
	}

	/* Apply micro-animations */
	.tag-item.micro-float {
		animation: microFloat 3s var(--animation-easing-micro) infinite;
	}

	.cta-button.micro-pulse {
		animation: microPulse 2s var(--animation-easing-micro);
		animation-fill-mode: forwards;
	}

	/* Remove will-change after animations complete to optimize performance */
	@media (prefers-reduced-motion: reduce) {
		:root {
			--animation-duration-fast: 0.1s;
			--animation-duration-medium: 0.1s;
			--animation-duration-slow: 0.1s;
		}

		/* Respect user's motion preferences */
		.sinthome-title,
		.content-hidden,
		.tagline,
		.tag-item,
		.cta-button,
		#scroll-indicator {
			transition-duration: 0.1s !important;
		}
	}

	/* Theme-aware tag and button styles */
	.theme-tag {
		border: 1px solid;
		color: var(--theme-text-primary);
		background-color: transparent;
	}

	/* Dark theme tags */
	html.theme-dark .theme-tag {
		border-color: rgba(255, 255, 255, 0.2);
	}

	html.theme-dark .theme-tag:hover {
		border-color: rgba(255, 255, 255, 0.4);
	}

	/* Light theme tags */
	html.theme-light .theme-tag {
		border-color: rgba(0, 0, 0, 0.2);
	}

	html.theme-light .theme-tag:hover {
		border-color: rgba(0, 0, 0, 0.4);
	}

	/* CTA Button Variants - Primary */
	.cta-button-primary {
		border: 2px solid;
		color: var(--theme-text-primary);
	}

	html.theme-dark .cta-button-primary {
		background-color: rgba(0, 0, 0, 0.4);
		border-color: rgba(255, 255, 255, 0.4);
	}

	html.theme-dark .cta-button-primary:hover {
		background-color: rgba(255, 255, 255, 0.1);
		border-color: rgba(255, 255, 255, 0.6);
	}

	html.theme-light .cta-button-primary {
		background-color: rgba(255, 255, 255, 0.8);
		border-color: rgba(0, 0, 0, 0.2);
	}

	html.theme-light .cta-button-primary:hover {
		background-color: rgba(0, 0, 0, 0.05);
		border-color: rgba(0, 0, 0, 0.4);
	}

	/* CTA Button Variants - Secondary */
	.cta-button-secondary {
		border: 2px solid;
		color: var(--theme-text-primary);
	}

	html.theme-dark .cta-button-secondary {
		background-color: rgba(0, 0, 0, 0.2);
		border-color: rgba(255, 255, 255, 0.4);
	}

	html.theme-dark .cta-button-secondary:hover {
		background-color: #dc2626;
		color: white;
		border-color: #dc2626;
	}

	html.theme-light .cta-button-secondary {
		background-color: rgba(255, 255, 255, 0.6);
		border-color: rgba(0, 0, 0, 0.2);
	}

	html.theme-light .cta-button-secondary:hover {
		background-color: #dc2626;
		color: white;
		border-color: #dc2626;
	}

	/* CTA Button Variants - Tertiary */
	.cta-button-tertiary {
		border: 2px solid;
		background-color: transparent;
		color: var(--theme-text-primary);
	}

	html.theme-dark .cta-button-tertiary {
		border-color: rgba(255, 255, 255, 0.4);
	}

	html.theme-dark .cta-button-tertiary:hover {
		background-color: #dc2626;
		color: white;
		border-color: #dc2626;
	}

	html.theme-light .cta-button-tertiary {
		border-color: rgba(0, 0, 0, 0.2);
	}

	html.theme-light .cta-button-tertiary:hover {
		background-color: #dc2626;
		color: white;
		border-color: #dc2626;
	}
</style>